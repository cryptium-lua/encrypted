local MacLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/cryptium-lua/encrypted/refs/heads/main/ui"))()
local Window = MacLib:Window({
    Title = "C97",
    Subtitle = "Key System | V1.00",
    Size = UDim2.fromOffset(868, 650),
    DragStyle = 2,
    DisabledWindowControls = {},
    ShowUserInfo = false,
    Keybind = Enum.KeyCode.RightControl,
    AcrylicBlur = false
})

Config = {
    api = "9afb4be9-8f64-4039-8b86-f75dd5318eee",
    service = "WL2",
    provider = "WL2",
	Key = ""
}

local function main()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/cryptium-lua/encrypted/refs/heads/main/wl2"))()
    print("Script loaded.")
end

local Scale = 0.78
task.spawn(function()
    while task.wait() do
        pcall(function()
            Window:SetScale(Scale)
        end)
    end
end)

local tabGroups = {
    TabGroup1 = Window:TabGroup(),
    TabGroup2 = Window:TabGroup()
}

local tabs = {
    Key = tabGroups.TabGroup1:Tab({ Name = "Key System" }),
    Settings = tabGroups.TabGroup2:Tab({ Name = "Settings" })
}

local sections = {
    MainSection1 = tabs.Key:Section({ Side = "Left" }),
    SettingsSection2 = tabs.Settings:Section({ Side = "Left" })
}

local function CopyDiscord()
	local discord = "https://discord.gg/sUqeN5sxjt"
	setclipboard(discord)
	Window:Notify({
		Title = "Key System",
		Description = "Discord link copied!",
		Lifetime = 3
	})
end

local function openGetKey()
	local JunkieKeySystem = loadstring(game:HttpGet("https://junkie-development.de/sdk/JunkieKeySystem.lua"))()
	local API_KEY = Config.api
	local PROVIDER = Config.provider
	local SERVICE = Config.service
	local link = JunkieKeySystem.getLink(API_KEY, PROVIDER, SERVICE)
	if link then
		if setclipboard then
			setclipboard(link)
			Window:Notify({
				Title = "Key System",
				Description = "Verification link copied!",
				Lifetime = 3
			})
		else
			Window:Notify({
				Title = "Key System",
				Description = "Link:" .. link,
				Lifetime = 3
			})
		end
	else
		Window:Notify({
			Title = "Key System",
			Description = "Failed to generate link.",
			Lifetime = 3
		})
	end
end

local function validateKey()
	local userKey = Config.Key
	if not userKey or userKey == "" then
		Window:Notify({
			Title = "Key System",
			Description = "Please enter a valid key.",
			Lifetime = 3
		})
		return
	end
	Window:Notify({
		Title = "Key System",
		Description = "Validating Key...",
		Lifetime = 3
	})
	local JunkieKeySystem = loadstring(game:HttpGet("https://junkie-development.de/sdk/JunkieKeySystem.lua"))()
	local API_KEY = Config.api
	local SERVICE = Config.service
	local isValid = JunkieKeySystem.verifyKey(API_KEY, userKey, SERVICE)
	if isValid then
		Window:Notify({
			Title = "Key System",
			Description = "Valid Key! Loading...",
			Lifetime = 3
		})
		task.wait(0.5)
		Window:Unload()
		main()
	else
		Window:Notify({
			Title = "Key System",
			Description = "Invalid Key! Try again.",
			Lifetime = 3
		})
	end
end

sections.MainSection1:Input({
	Name = "Key",
	Placeholder = "Enter Key",
	AcceptedCharacters = "All",
	Callback = function(input)
		Config.Key = input
	end
})

sections.MainSection1:Button({
	Name = "Validate Key",
	Callback = function()
		validateKey()
	end
})

sections.MainSection1:Button({
	Name = "Get Key",
	Callback = function()
		openGetKey()
	end
})

sections.MainSection1:Button({
	Name = "Discord Server",
	Callback = function()
		CopyDiscord()
	end
})

sections.SettingsSection1:Input({
	Name = "UI Scale",
	Placeholder = "Decimals",
	AcceptedCharacters = "All",
	Callback = function(input)
		Scale = input
	end
})