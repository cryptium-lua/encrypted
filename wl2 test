local Player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

getgenv().setup = false
getgenv().boss = false
getgenv().WaterV2 = false
getgenv().InstaKill = true
getgenv().DungeonMoves = false

getgenv().MobNames = {"Demon Slayer"}
getgenv().MobNames2 = {"Tanjiro (Water)"}
getgenv().MobNames3 = {"Tanjiro (Water)"}

local MoonV2Taken = false

local function TakeQuest(name)
	local args = {[1] = name}
	ReplicatedStorage.Events.QuestTake:FireServer(unpack(args))
end

local GojoDungeon = {
    {Name = "Reversal Red", MoveIndex = "FirstMove"}
}

TakeQuest("Gojo")
task.wait(0.5)
getgenv().setup = true
getgenv().DungeonMoves = true

task.spawn(function()
	while task.wait() do
		pcall(function()
			local moveset = Player.Movesets.Moveset.Value
			local mastery = Player.Mastery.Gojo.Mastery.Value

			if moveset == "Gojo" then
				getgenv().boss = true
				wait(0)
				local args = {
					[1] = "Quest Boss Dummy 1",
					[2] = 1,
					[3] = "2K YEN, 20K XP",
					[4] = "TANJIRO",
					[5] = "TANJIRO ATTACK"
				}
				game:GetService("ReplicatedStorage").Events.QuestTake:FireServer(unpack(args))
				wait(0)
				getgenv().setup = false
				getgenv().WaterV2 = false
			end

			if mastery >= 30 then
				getgenv().boss = false
				getgenv().setup = false
				getgenv().WaterV2 = false
				getgenv().DungeonMoves = false
			end
		end)
	end
end)

task.spawn(function()
	local currentMove = 1
	while task.wait() do
		if getgenv().DungeonMoves then
			pcall(function()
				local move = GojoDungeon[currentMove]
				local args = {
					[1] = "Skill",
					[2] = move.Name,
					[3] = "Release",
					[4] = move.MoveIndex,
					[6] = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character.HumanoidRootPart.CFrame or CFrame.new()
				}
				ReplicatedStorage.Remotes.Attack:FireServer(unpack(args))
				currentMove += 1
				if currentMove > #GojoDungeon then currentMove = 1 end
			end)
		end
	end
end)

task.spawn(function()
	while task.wait(0.2) do
		if getgenv().InstaKill then
			pcall(function()
				local chars = Workspace:FindFirstChild("CharactersAndNPCs")
				if not chars then return end
				for _, v in pairs(chars:GetChildren()) do
					if v ~= Player.Character then
						local hrp = v:FindFirstChild("HumanoidRootPart")
						local hum = v:FindFirstChildOfClass("Humanoid")
						if hrp and hum and isnetworkowner(hrp) and hum.Health > 0 and hum.Health <= (0.89 * hum.MaxHealth) then
							hum.Health = 0
						end
					end
				end
			end)
		end
	end
end)

task.spawn(function()
	local antifall
	while task.wait(0.1) do
		pcall(function()
			if not getgenv().setup then
				if antifall then antifall:Destroy() antifall = nil end
				return
			end
			local chars = Workspace:FindFirstChild("CharactersAndNPCs")
			if not chars then return end

			local myhrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
			if not myhrp then return end

			local closest, dist = nil, math.huge
			for _, mob in pairs(chars:GetChildren()) do
				if table.find(getgenv().MobNames, mob.Name) then
					local hrp = mob:FindFirstChild("HumanoidRootPart")
					local hum = mob:FindFirstChildOfClass("Humanoid")
					if hrp and hum and hum.Health > 0 then
						local mag = (myhrp.Position - hrp.Position).Magnitude
						if mag < dist then
							dist = mag
							closest = mob
						end
					end
				end
			end

			if closest then
				local hrp = closest:FindFirstChild("HumanoidRootPart")
				if hrp then
					if not antifall then
						antifall = Instance.new("BodyVelocity")
						antifall.Velocity = Vector3.new(0, 0, 0)
						antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
						antifall.Parent = myhrp
					end
					myhrp.CFrame = hrp.CFrame * CFrame.new(0, 0, 13)
				end
			elseif antifall then
				antifall:Destroy()
				antifall = nil
			end
		end)
	end
end)

task.spawn(function()
	local antifall
	while task.wait(0.1) do
		pcall(function()
			if not getgenv().boss then
				if antifall then antifall:Destroy() antifall = nil end
				return
			end
			local chars = Workspace:FindFirstChild("CharactersAndNPCs")
			if not chars then return end

			local myhrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
			if not myhrp then return end

			local closest, dist = nil, math.huge
			for _, mob in pairs(chars:GetChildren()) do
				if table.find(getgenv().MobNames2, mob.Name) then
					local hrp = mob:FindFirstChild("HumanoidRootPart")
					local hum = mob:FindFirstChildOfClass("Humanoid")
					if hrp and hum and hum.Health > 0 then
						local mag = (myhrp.Position - hrp.Position).Magnitude
						if mag < dist then
							dist = mag
							closest = mob
						end
					end
				end
			end

			if closest then
				local hrp = closest:FindFirstChild("HumanoidRootPart")
				if hrp then
					if not antifall then
						antifall = Instance.new("BodyVelocity")
						antifall.Velocity = Vector3.new(0, 0, 0)
						antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
						antifall.Parent = myhrp
					end
					myhrp.CFrame = hrp.CFrame * CFrame.new(0, 0, 13)
				end
			elseif antifall then
				antifall:Destroy()
				antifall = nil
			end
		end)
	end
end)

task.spawn(function()
	local antifall
	while task.wait(0.1) do
		pcall(function()
			if not getgenv().WaterV2 then
				if antifall then antifall:Destroy() antifall = nil end
				return
			end
			local chars = Workspace:FindFirstChild("CharactersAndNPCs")
			if not chars then return end

			local myhrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
			if not myhrp then return end

			local closest, dist = nil, math.huge
			for _, mob in pairs(chars:GetChildren()) do
				if table.find(getgenv().MobNames3, mob.Name) then
					local hrp = mob:FindFirstChild("HumanoidRootPart")
					local hum = mob:FindFirstChildOfClass("Humanoid")
					if hrp and hum and hum.Health > 0 then
						local mag = (myhrp.Position - hrp.Position).Magnitude
						if mag < dist then
							dist = mag
							closest = mob
						end
					end
				end
			end

			if closest then
				local hrp = closest:FindFirstChild("HumanoidRootPart")
				if hrp then
					if not antifall then
						antifall = Instance.new("BodyVelocity")
						antifall.Velocity = Vector3.new(0, 0, 0)
						antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
						antifall.Parent = myhrp
					end
					myhrp.CFrame = hrp.CFrame * CFrame.new(0, 0, 13)
				end
			elseif antifall then
				antifall:Destroy()
				antifall = nil
			end
		end)
	end
end)