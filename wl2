local Player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local TeleportService = game:GetService("TeleportService")

local GojoMove = {
    {Name = "Reversal Red", MoveIndex = "FirstMove"},
    {Name = ".2 Second Domain", MoveIndex = "FifthMove"}
}

local GojoDungeon = {
    {Name = "Lapse Blue", MoveIndex = "SecondMove"}
}

-- Auto Quest
task.spawn(function()
	while task.wait(3) do
		if getgenv().AutoQuest then
			pcall(function()
				local questName = (getgenv().QuestType == "Boss" and "Quest Boss Dummy " or "Quest Dummy ") .. tostring(getgenv().QuestNumber)
				local args = { [1] = questName, [2] = 1, [3] = "2K YEN, 20K XP", [4] = "TANJIRO", [5] = "TANJIRO ATTACK" }
				ReplicatedStorage.Events.QuestTake:FireServer(unpack(args))
			end)
		end
	end
end)

-- Auto Farm (original, skips player)
task.spawn(function()
	local antifall
	while task.wait(0.1) do
		pcall(function()
			if not getgenv().AutoFarm then
				if antifall then antifall:Destroy() antifall = nil end
				return
			end
			local chars = Workspace:FindFirstChild("CharactersAndNPCs")
			if not chars then return end

			local myhrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
			if not myhrp then return end

			local closest, dist = nil, math.huge
			for _, mob in pairs(chars:GetChildren()) do
				if table.find(getgenv().MobNames, mob.Name) then
					local hrp = mob:FindFirstChild("HumanoidRootPart")
					local hum = mob:FindFirstChildOfClass("Humanoid")
					if hrp and hum and hum.Health > 0 then
						local mag = (myhrp.Position - hrp.Position).Magnitude
						if mag < dist then
							dist = mag
							closest = mob
						end
					end
				end
			end

			if closest then
				local hrp = closest:FindFirstChild("HumanoidRootPart")
				if hrp then
					if not antifall then
						antifall = Instance.new("BodyVelocity")
						antifall.Velocity = Vector3.new(0, 0, 0)
						antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
						antifall.Parent = myhrp
					end
					myhrp.CFrame = hrp.CFrame * CFrame.new(0, 0, 13)
				end
			elseif antifall then
				antifall:Destroy()
				antifall = nil
			end
		end)
	end
end)

-- Dungeon Farm (only target mobs with "Dungeon" in their name)
task.spawn(function()
	local antifall
	while task.wait(0.1) do
		pcall(function()
			if not getgenv().DungeonFarm then
				if antifall then antifall:Destroy() antifall = nil end
				return
			end

			local chars = Workspace:FindFirstChild("CharactersAndNPCs")
			if not chars then return end

			local myhrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
			if not myhrp then return end

			local waveText = Player.PlayerGui:FindFirstChild("HUD") and Player.PlayerGui.HUD:FindFirstChild("Dungeon") and Player.PlayerGui.HUD.Dungeon:FindFirstChild("Wave") and Player.PlayerGui.HUD.Dungeon.Wave.Text
			local waveNumber = tonumber(waveText and waveText:match("%d+")) or 0

			if waveNumber == 0 and #chars:GetChildren() >= 5 then
				myhrp.CFrame = CFrame.new(-542.355896, 65.6260452, 591.849121)
				return
			end

			local closest, dist = nil, math.huge
			for _, mob in pairs(chars:GetChildren()) do
				if mob ~= Player.Character and string.find(mob.Name, "Dungeon") then
					local hrp = mob:FindFirstChild("HumanoidRootPart")
					local hum = mob:FindFirstChildOfClass("Humanoid")
					if hrp and hum and hum.Health > 0 then
						local mag = (myhrp.Position - hrp.Position).Magnitude
						if mag < dist then
							dist = mag
							closest = mob
						end
					end
				end
			end

			if closest then
				local hrp = closest:FindFirstChild("HumanoidRootPart")
				if hrp then
					if not antifall then
						antifall = Instance.new("BodyVelocity")
						antifall.Velocity = Vector3.new(0, 0, 0)
						antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
						antifall.Parent = myhrp
					end
					local behindPosition = hrp.Position - hrp.CFrame.LookVector * 13
					myhrp.CFrame = CFrame.lookAt(behindPosition, hrp.Position)
				end
			elseif antifall then
				antifall:Destroy()
				antifall = nil
			end
		end)
	end
end)

-- Auto M1 Attack
task.spawn(function()
	while task.wait(0.2) do
		if getgenv().AutoM1 then
			pcall(function()
				local args = {[1] = "M1", [2] = "Katana", [3] = false}
				ReplicatedStorage.Remotes.Attack:FireServer(unpack(args))
			end)
		end
	end
end)

-- Auto Breathing
task.spawn(function()
	while task.wait(0) do
		pcall(function()
			local args = {[1] = "BeginHamonBreathing"}
			ReplicatedStorage.Events.Breathing:FireServer(unpack(args))
		end)
	end
end)

-- InstaKill
task.spawn(function()
	while task.wait(0.2) do
		if getgenv().InstaKill then
			pcall(function()
				local chars = Workspace:FindFirstChild("CharactersAndNPCs")
				if not chars then return end
				for _, v in pairs(chars:GetChildren()) do
					if v ~= Player.Character then
						local hrp = v:FindFirstChild("HumanoidRootPart")
						local hum = v:FindFirstChildOfClass("Humanoid")
						if hrp and hum and isnetworkowner(hrp) and hum.Health > 0 and hum.Health <= (0.89 * hum.MaxHealth) then
							hum.Health = 0
						end
					end
				end
			end)
		end
	end
end)

-- Auto Gojo Skill
task.spawn(function()
	local currentMove = 1
	while task.wait(0) do
		if getgenv().AutoGojo then
			pcall(function()
				local move = GojoMove[currentMove]
				local args = {
					[1] = "Skill",
					[2] = move.Name,
					[3] = "Release",
					[4] = move.MoveIndex,
					[6] = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character.HumanoidRootPart.CFrame or CFrame.new()
				}
				ReplicatedStorage.Remotes.Attack:FireServer(unpack(args))
				currentMove += 1
				if currentMove > #GojoMove then currentMove = 1 end
			end)
		end
	end
end)

-- Auto Gojo Dungeon Skill
task.spawn(function()
	local currentMove = 1
	while task.wait(0) do
		if getgenv().DungeonMoves then
			pcall(function()
				local move = GojoDungeon[currentMove]
				local args = {
					[1] = "Skill",
					[2] = move.Name,
					[3] = "Release",
					[4] = move.MoveIndex,
					[6] = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character.HumanoidRootPart.CFrame or CFrame.new()
				}
				ReplicatedStorage.Remotes.Attack:FireServer(unpack(args))
				currentMove += 1
				if currentMove > #GojoDungeon then currentMove = 1 end
			end)
		end
	end
end)

-- Dungeon Reset (fast check, wave 91+)
task.spawn(function()
    while task.wait(0.01) do
        if getgenv().DungeonReset then
            local success, waveText = pcall(function()
                return Player.PlayerGui:WaitForChild("HUD"):WaitForChild("Dungeon"):WaitForChild("Wave").Text
            end)
            if success then
                local waveNumber = tonumber(waveText:match("%d+"))
                if waveNumber and waveNumber >= DungeonWave then
                    pcall(function()
                        getgenv().DungeonFarm = false
                        getgenv().AutoGojo = false
                        if Player.Character and Player.Character:FindFirstChild("Humanoid") then
                            Player.Character.Humanoid.Health = 0
                            task.wait(8)
                            TeleportService:Teleport(18337464872, Player)
                        end
                    end)
                end
            end
        end
    end
end)