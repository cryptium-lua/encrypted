local Player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local TeleportService = game:GetService("TeleportService")

getgenv().DungeonFarm = false
getgenv().DungeonReset = false
getgenv().DungeonWave = 5
getgenv().DungeonMoves = false
getgenv().AutoQuest = false
getgenv().InstaKill = false
getgenv().AutoFarm = false
getgenv().AutoM1 = false
getgenv().automoves = false
getgenv().AutoBreath = false
getgenv().moveset = {}
getgenv().QuestType = nil
getgenv().QuestNumber = 1
getgenv().MobNames = {}

local GojoDungeon = {
    {Name = "Lapse Blue", MoveIndex = "SecondMove"}
}

local MacLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/cryptium-lua/encrypted/refs/heads/main/ui"))()
local Window = MacLib:Window({
    Title = "LUA / C97",
    Subtitle = "WL2 | V2.67",
    Size = UDim2.fromOffset(868, 650),
    DragStyle = 2,
    DisabledWindowControls = {},
    ShowUserInfo = true,
    Keybind = Enum.KeyCode.RightControl,
    AcrylicBlur = false
})

local Scale = 0.78
task.spawn(function()
    while true do
        task.wait()
        pcall(function()
            Window:SetScale(Scale)
        end)
    end
end)

local tabGroups = {
    TabGroup1 = Window:TabGroup(),
    TabGroup2 = Window:TabGroup()
}

local tabs = {
    Autofarm = tabGroups.TabGroup1:Tab({ Name = "Farm" }),
    Dungeon = tabGroups.TabGroup1:Tab({ Name = "Dungeon" }),
    Settings = tabGroups.TabGroup2:Tab({ Name = "Settings" })
}

local sections = {
    MainSection1 = tabs.Autofarm:Section({ Side = "Left" }),
    MainSection2 = tabs.Autofarm:Section({ Side = "Right" }),
    MainSection3 = tabs.Autofarm:Section({ Side = "Left" }),
    DungeonSection1 = tabs.Dungeon:Section({ Side = "Left" }),
    SettingsSection1 = tabs.Settings:Section({ Side = "Left" })
}

sections.MainSection1:Toggle({
    Name = "Auto Farm",
    Default = false,
    Callback = function(value)
        getgenv().AutoFarm = value
    end
}, "AutoFarm")

local function updateMobOptions(dropdown)
    local charsFolder = Workspace:FindFirstChild("CharactersAndNPCs")
    if not charsFolder then return end
    local names = {}
    for _, child in pairs(charsFolder:GetChildren()) do
        table.insert(names, child.Name)
    end
    dropdown:InsertOptions(names)
end

local MobDropdown = sections.MainSection1:Dropdown({
    Name = "Mobs",
    Search = true,
    Multi = true,
    Required = false,
    Options = {},
    Default = {},
    Callback = function(Value)
        getgenv().MobNames = Value
    end
}, "MobTable")

updateMobOptions(MobDropdown)

local charsFolder = Workspace:FindFirstChild("CharactersAndNPCs")
if charsFolder then
    charsFolder.ChildAdded:Connect(function() updateMobOptions(MobDropdown) end)
    charsFolder.ChildRemoved:Connect(function() updateMobOptions(MobDropdown) end)
end

sections.MainSection1:Toggle({
    Name = "Auto M1",
    Default = false,
    Callback = function(value)
        getgenv().AutoM1 = value
    end
}, "AutoM1")

sections.MainSection2:Toggle({
    Name = "Auto Moves",
    Default = false,
    Callback = function(value)
        getgenv().automoves = value
        Window:Notify({
            Title = "lua",
            Description = "Use a gojo skill for the cd.",
            Lifetime = 8
        })
    end
}, "AutoMoves")

local MovesDropdown = sections.MainSection2:Dropdown({
    Name = "Moves",
    Search = true,
    Multi = true,
    Required = false,
    Options = {"Reversal Red", "Lapse Blue", "Close Combat", "Hollow Purple", ".2 Second Domain"},
    Default = {},
    Callback = function(Value)
        local allMoves = {
            ["Reversal Red"] = "FirstMove",
            ["Lapse Blue"] = "SecondMove",
            ["Close Combat"] = "ThirdMove",
            ["Hollow Purple"] = "FourthMove",
            [".2 Second Domain"] = "FifthMove"
        }
        local selectedMoves = {}
        for name, selected in pairs(Value) do
            if selected and allMoves[name] then
                table.insert(selectedMoves, {Name = name, MoveIndex = allMoves[name]})
            end
        end
        getgenv().moveset = selectedMoves
    end
}, "UseMoves")

sections.MainSection2:Toggle({
    Name = "Instant Kill",
    Default = false,
    Callback = function(value)
        getgenv().InstaKill = value
    end
}, "InstantKill")

sections.MainSection3:Toggle({
    Name = "Auto Quest",
    Default = false,
    Callback = function(value)
        getgenv().AutoQuest = value
    end
}, "AutoQuest")

local QuestDropdown = sections.MainSection3:Dropdown({
    Name = "Quest Type",
    Search = false,
    Multi = false,
    Required = false,
    Options = {"Boss", "Normal"},
    Default = {},
    Callback = function(Value)
        getgenv().QuestType = Value
    end
}, "QuestType")

sections.MainSection3:Input({
    Name = "Quest Number",
    Placeholder = "1",
    AcceptedCharacters = "Numeric",
    Callback = function(input)
        getgenv().QuestNumber = input
    end
}, "QuestNumber")

sections.MainSection3:Toggle({
    Name = "Auto Breath",
    Default = false,
    Callback = function(value)
        getgenv().AutoBreath = value
    end
}, "AutoBreath")

sections.SettingsSection1:Input({
    Name = "UI Scale",
    Placeholder = "1 = 100",
    AcceptedCharacters = "All",
    Callback = function(input)
        Scale = input
        Window:Notify({
            Title = Window.Settings.Title,
            Description = "Successfully set Scale to " .. input
        })
    end
}, "Input")

sections.DungeonSection1:Toggle({
    Name = "Dungeon Farm",
    Default = false,
    Callback = function(value)
        getgenv().DungeonFarm = value
    end
}, "DungeonFarm")

sections.DungeonSection1:Toggle({
    Name = "Auto Reset",
    Default = false,
    Callback = function(value)
        getgenv().DungeonReset = value
    end
}, "DungeonReset")

sections.MainSection3:Input({
    Name = "Reset At",
    Placeholder = "5",
    AcceptedCharacters = "Numeric",
    Callback = function(input)
        getgenv().DungeonWave = input
    end
}, "ResetWave")

sections.MainSection3:Input({
    Name = "Auto Ability",
    Placeholder = "1",
    AcceptedCharacters = "Numeric",
    Callback = function(input)
        getgenv().DungeonMoves = input
    end
}, "AutoAbilityDungeon")

-- functions

task.spawn(function()
    while task.wait(1) do
        if getgenv().AutoQuest then
            pcall(function()
                local questName = (getgenv().QuestType == "Boss" and "Quest Boss Dummy " or "Quest Dummy ") .. tostring(getgenv().QuestNumber)
                local args = { [1] = questName, [2] = 1, [3] = "2K YEN, 20K XP", [4] = "TANJIRO", [5] = "TANJIRO ATTACK" }
                ReplicatedStorage.Events.QuestTake:FireServer(unpack(args))
            end)
        end
    end
end)

task.spawn(function()
    local antifall
    while task.wait(0.1) do
        pcall(function()
            if not getgenv().AutoFarm then
                if antifall then antifall:Destroy() antifall = nil end
                return
            end
            local chars = Workspace:FindFirstChild("CharactersAndNPCs")
            if not chars then return end
            local myhrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
            if not myhrp then return end
            local closest, dist = nil, math.huge
            for _, mob in pairs(chars:GetChildren()) do
                if getgenv().MobNames[mob.Name] then
                    local hrp = mob:FindFirstChild("HumanoidRootPart")
                    local hum = mob:FindFirstChildOfClass("Humanoid")
                    if hrp and hum and hum.Health > 0 then
                        local mag = (myhrp.Position - hrp.Position).Magnitude
                        if mag < dist then
                            dist = mag
                            closest = mob
                        end
                    end
                end
            end
            if closest then
                local hrp = closest:FindFirstChild("HumanoidRootPart")
                if hrp then
                    if not antifall then
                        antifall = Instance.new("BodyVelocity")
                        antifall.Velocity = Vector3.zero
                        antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                        antifall.Parent = myhrp
                    end
                    myhrp.CFrame = hrp.CFrame * CFrame.new(0, 0, 13)
                end
            elseif antifall then
                antifall:Destroy()
                antifall = nil
            end
        end)
    end
end)

task.spawn(function()
	local antifall
	while task.wait(0.1) do
		pcall(function()
			if not getgenv().DungeonFarm then
				if antifall then antifall:Destroy() antifall = nil end
				return
			end

			local chars = Workspace:FindFirstChild("CharactersAndNPCs")
			if not chars then return end

			local myhrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
			if not myhrp then return end

			local waveText = Player.PlayerGui:FindFirstChild("HUD") and Player.PlayerGui.HUD:FindFirstChild("Dungeon") and Player.PlayerGui.HUD.Dungeon:FindFirstChild("Wave") and Player.PlayerGui.HUD.Dungeon.Wave.Text
			local waveNumber = tonumber(waveText and waveText:match("%d+")) or 0

			if waveNumber == 0 and #chars:GetChildren() >= 5 then
				myhrp.CFrame = CFrame.new(-542.355896, 65.6260452, 591.849121)
				return
			end

			local closest, dist = nil, math.huge
			for _, mob in pairs(chars:GetChildren()) do
				if mob ~= Player.Character and string.find(mob.Name, "Dungeon") then
					local hrp = mob:FindFirstChild("HumanoidRootPart")
					local hum = mob:FindFirstChildOfClass("Humanoid")
					if hrp and hum and hum.Health > 0 then
						local mag = (myhrp.Position - hrp.Position).Magnitude
						if mag < dist then
							dist = mag
							closest = mob
						end
					end
				end
			end

			if closest then
				local hrp = closest:FindFirstChild("HumanoidRootPart")
				if hrp then
					if not antifall then
						antifall = Instance.new("BodyVelocity")
						antifall.Velocity = Vector3.new(0, 0, 0)
						antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
						antifall.Parent = myhrp
					end
					local behindPosition = hrp.Position - hrp.CFrame.LookVector * 13
					myhrp.CFrame = CFrame.lookAt(behindPosition, hrp.Position)
				end
			elseif antifall then
				antifall:Destroy()
				antifall = nil
			end
		end)
	end
end)

task.spawn(function()
	while task.wait(0) do
		if getgenv().AutoM1 then
			pcall(function()
				local args = {[1] = "M1", [2] = "Katana", [3] = false}
				ReplicatedStorage.Remotes.Attack:FireServer(unpack(args))
			end)
		end
	end
end)

task.spawn(function()
    local currentMove = 1
    while task.wait(0) do
        if getgenv().automoves then
            pcall(function()
                local moves = getgenv().moveset
                if #moves == 0 then return end
                local move = moves[currentMove]
                local args = {
                    [1] = "Skill",
                    [2] = move.Name,
                    [3] = "Release",
                    [4] = move.MoveIndex,
                    [6] = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character.HumanoidRootPart.CFrame or CFrame.new()
                }
                ReplicatedStorage.Remotes.Attack:FireServer(unpack(args))
                currentMove = currentMove + 1
                if currentMove > #moves then currentMove = 1 end
            end)
        end
    end
end)

task.spawn(function()
    local currentMove = 1
    while task.wait(0) do
        if getgenv().DungeonMoves then
            pcall(function()
                local move = GojoDungeon[currentMove]
                local args = {
                    [1] = "Skill",
                    [2] = move.Name,
                    [3] = "Release",
                    [4] = move.MoveIndex,
                    [6] = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character.HumanoidRootPart.CFrame or CFrame.new()
                }
                ReplicatedStorage.Remotes.Attack:FireServer(unpack(args))
                currentMove = currentMove + 1
                if currentMove > #GojoDungeon then currentMove = 1 end
            end)
        end
    end
end)

task.spawn(function()
	while task.wait(0) do
		if getgenv().AutoBreath then
		pcall(function()
			local args = {[1] = "BeginHamonBreathing"}
			ReplicatedStorage.Events.Breathing:FireServer(unpack(args))
		end)
	end
	end
end)

task.spawn(function()
	while task.wait(0) do
		if getgenv().InstaKill then
			pcall(function()
				local chars = Workspace:FindFirstChild("CharactersAndNPCs")
				if not chars then return end
				for _, v in pairs(chars:GetChildren()) do
					if v ~= Player.Character then
						local hrp = v:FindFirstChild("HumanoidRootPart")
						local hum = v:FindFirstChildOfClass("Humanoid")
						if hrp and hum and isnetworkowner(hrp) and hum.Health > 0 and hum.Health <= (0.89 * hum.MaxHealth) then
							hum.Health = 0
						end
					end
				end
			end)
		end
	end
end)

MacLib:SetFolder("Lua-WL2")
tabs.Settings:InsertConfigSection("Right")
Window.onUnloaded(function()
    print("Unloaded!")
end)

tabs.Autofarm:Select()
MacLib:LoadAutoLoadConfig()
tabs.Settings:Select()
MacLib:LoadAutoLoadConfig()